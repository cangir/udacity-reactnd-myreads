{"version":3,"sources":["Book.js","Shelf.js","BooksAPI.js","Home.js","Search.jsx","App.js","index.js"],"names":["Book","evt","shelf","target","value","this","props","handler","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","handleBookUpdate","bind","disabled","title","authors","join","Component","Shelf","books","map","book","key","id","caption","api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","Home","state","fetchBooks","setState","filter","updateBook","console","log","forEach","oldBook","ind","filterBooksByShelf","updateHandler","Link","to","Search","reqCount","maxReq","allBooks","curReq","term","query","setSearchState","catch","trim","doSearch","found","parse","searchBook","getBook","inputChange","type","placeholder","BooksApp","basename","window","location","pathname","Route","exact","path","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62f0b236.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Book extends Component {\n\thandleBookUpdate(evt){\n\t\tconst shelf = evt.target.value\n\t\tthis.props.handler(this.props, shelf)\n\t}\n\n\trender(){\n\t\tconst shelf = this.props.shelf ? this.props.shelf : 'none'\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<div className=\"book\">\n\t\t\t\t\t<div className=\"book-top\">\n\t\t\t\t\t\t<div className=\"book-cover\" style={{\n\t\t\t\t\t\t\twidth: 128,\n\t\t\t\t\t\t\theight: 193,\n\t\t\t\t\t\t\tbackgroundImage: `url(\"${this.props.imageLinks ? this.props.imageLinks.thumbnail : ''}\")`\n\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t<div className=\"book-shelf-changer\">\n\t\t\t\t\t\t\t<select value={shelf} onChange={this.handleBookUpdate.bind(this)}>\n\t\t\t\t\t\t\t\t<option disabled>Move to...</option>\n\t\t\t\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t\t\t\t\t<option value=\"none\">None</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"book-title\">{this.props.title}</div>\n\t\t\t\t\t<div className=\"book-authors\">\n\t\t\t\t\t\t{this.props.authors ? this.props.authors.join(', ') : 'None'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport Book from './Book'\n\nexport default class Shelf extends Component {\n\trender() {\n\t\tlet books = this.props.books.map((book) => (\n\t\t\t<Book key={book.id} {...book} handler={this.props.handler}/>\n\t\t))\n\t\treturn (\n\t\t\t<div className=\"bookshelf\">\n\t\t\t\t<h2 className=\"bookshelf-title\">{this.props.caption}</h2>\n\t\t\t\t<div className=\"bookshelf-books\">\n\t\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t\t{books}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport Shelf from './Shelf'\nimport {getAll, update} from './BooksAPI'\n\n\nexport default class Home extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tbooks: []\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.fetchBooks()\n\t}\n\n\tfetchBooks(){\n\t\tgetAll().then((data) => {\n\t\t\tthis.setState({books: data})\n\t\t})\n\t}\n\n\tfilterBooksByShelf(shelf){\n\t\treturn this.state.books.filter((book) => book.shelf === shelf)\n\t}\n\n\tupdateHandler(book, shelf){\n\t\tthis.updateBook(book, shelf)\n\t\tupdate(book, shelf).then(() => console.log('Book update done'))\n\t}\n\n\tupdateBook(book, shelf){\n\t\tlet books = this.state.books;\n\t\tbooks.forEach((oldBook, ind) => {\n\t\t\tif (oldBook.id === book.id){\n\t\t\t\tbooks[ind].shelf = shelf\n\t\t\t}\n\t\t})\n\t\tthis.setState({books: books})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"list-books\">\n\t\t\t\t<div className=\"list-books-title\">\n\t\t\t\t\t<h1>MyReads</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"list-books-content\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Shelf caption=\"Currently Reading\" books={this.filterBooksByShelf('currentlyReading')}\n\t\t\t\t\t\t\thandler={this.updateHandler.bind(this)}/>\n\t\t\t\t\t\t<Shelf caption=\"Want to Read\" books={this.filterBooksByShelf('wantToRead')}\n\t\t\t\t\t\t\thandler={this.updateHandler.bind(this)}/>\n\t\t\t\t\t\t<Shelf caption=\"Read\" books={this.filterBooksByShelf('read')}\n\t\t\t\t\t\t\thandler={this.updateHandler.bind(this)}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"open-search\">\n\t\t\t\t\t<Link to='/search'>Add a book</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport { search, update, getAll } from './BooksAPI'\nimport Book from './Book'\n\nexport default class Search extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tbooks: [],\n\t\t\treqCount: 0,\n\t\t\tmaxReq: 0,\n\t\t\tallBooks: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchBooks()\n\t}\n\n\tfetchBooks() {\n\t\tgetAll().then((data) => {\n\t\t\tconsole.log('all books loaded')\n\t\t\tthis.setState({ allBooks: data })\n\t\t})\n\t}\n\n\tsetSearchState(books, curReq){\n\t\tif (curReq < this.state.maxReq){\n\t\t\tconsole.log('a response was invalidated')\n\t\t\t// old request, invalidate\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({books: books, maxReq: curReq})\n\t}\n\n\tdoSearch(term){\n\t\t// attaching IDs to request, to solve async stale data issues\n\t\tlet curReq = this.state.reqCount + 1\n\t\tthis.setState({reqCount: curReq})\n\t\n\t\tif (!term){\n\t\t\tthis.setSearchState([], curReq)\n\t\t\treturn;\n\t\t}\n\t\tsearch(term).then((books) => {\n\t\t\tconsole.log('search done')  // again takes a lot of time so\n\t\t\tthis.setSearchState(books, curReq)\n\t\t}).catch (() => {\n\t\t\tconsole.log('search failed')\n\t\t\tthis.setSearchState([], curReq)\n\t\t\t// happens sometimes, maybe on invalid terms\n\t\t\t// REQ: Invalid queries are handled and prior search results are not shown.\n\t\t})\n\t}\n\n\tinputChange(evt){\n\t\tconst term = evt.target.value.trim()\n\t\tthis.doSearch(term)\n\t}\n\n\tupdateHandler(book, shelf) {\n\t\tthis.updateBook(book, shelf)\n\t\tupdate(book, shelf).then(() => console.log('Book update done'))\n\t\t// ^ takes a lot of time so better for checking\n\t}\n\n\tupdateBook(book, shelf) {\n\t\tlet books = this.state.allBooks\n\t\tlet found = false\n\t\tbooks.forEach((oldBook, ind) => {\n\t\t\tif (oldBook.id === book.id) {\n\t\t\t\tbooks[ind].shelf = shelf\n\t\t\t\tfound = true\n\t\t\t}\n\t\t})\n\t\tif (!found){\n\t\t\t// add new book\n\t\t\tbooks[book.id] = JSON.parse(JSON.stringify(book)) // clone\n\t\t\tbooks[book.id].shelf = shelf\n\t\t}\n\t\tthis.setState({ allBooks: books })\n\t}\n\n\t// gets book from allBooks collection\n\tgetBook(searchBook){\n\t\tlet books = this.state.allBooks;\n\t\tfor (let key in books){\n\t\t\tif (books[key].id === searchBook.id){\n\t\t\t\tconsole.log('match in search books and own books')\n\t\t\t\treturn books[key]\n\t\t\t}\n\t\t}\n\t\treturn searchBook\n\t}\n\n\trender() {\n\t\tlet books = this.state.books.map((book) => (\n\t\t\t<Book key={book.id} {...this.getBook(book)} handler={this.updateHandler.bind(this)} />\n\t\t))\n\t\treturn (\n\t\t\t<div className=\"search-books\">\n\t\t\t\t<div className=\"search-books-bar\">\n\t\t\t\t\t<Link className=\"close-search\" to='/'>Close</Link>\n\t\t\t\t\t<div className=\"search-books-input-wrapper\">\n\t\t\t\t\t\t<input onChange={this.inputChange.bind(this)} type=\"text\" \n\t\t\t\t\t\t\tplaceholder=\"Search by title or author\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-books-results\">\n\t\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t\t{books}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Home from './Home'\nimport Search from './Search'\n\n\nclass BooksApp extends React.Component {\n  render() {\n    return (\n      <Router basename={window.location.pathname || ''}>\n        <div className=\"app\">\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/search\" component={Search} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}